pipeline { 
    agent{ 
       docker{ 
         image 'maven:3.9.8-sapmachine-21' 
         args '-v $HOME/.m2:/root/.m2' 
       } 
    } 
    stages{ 
        stage('build'){ 
            steps{ 
                echo 'building worker app' 
                dir('worker'){ 
                  sh 'mvn compile' 
                } 
            } 
        } 
        stage('test'){ 
            steps{ 
                echo 'running unit tests on worker app' 
                dir('worker'){ 
                  sh 'mvn clean test' 
                } 
            } 
        } 
        stage('package'){ 
            steps{ 
                echo 'packaging worker app into a jarfile'
                dir('worker'){ 
                  sh 'mvn package -DskipTests' 
                  archiveArtifacts artifacts: '**/target/*.jar', fingerprint:  true 
                } 
            } 
        } 
    }

    stage('Sonarqube') {
      agent any
      when{
        branch 'master'
      }
      // tools {
       // jdk "JDK11" // the name you have given the JDK installation in Global Tool Configuration
     // }

      environment{
        sonarpath = tool 'SonarScanner'
      }

      steps {
            echo 'Running Sonarqube Analysis..'
            withSonarQubeEnv('sonar-instavote') {
              sh "${sonarpath}/bin/sonar-scanner -Dproject.settings=sonar-project.properties -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.HEARTBEAT_CHECK_INTERVAL=86400"
            }
      }
    }


    stage("Quality Gate") {
        steps {
            timeout(time: 1, unit: 'HOURS') {
                // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                // true = set pipeline to UNSTABLE, false = don't
                waitForQualityGate abortPipeline: true
            }
        }
    }
    post{ 
        always{ 
            echo 'the job is complete' 

    }
  }
}
